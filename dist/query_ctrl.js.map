{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","ThrukDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","table","columns","condition","type","setColSegments","This","data","newSegment","text","value","datasource","q","when","requestOptions","_requestOptions","url","method","headers","backendSrv","datasourceRequest","then","_","map","result","d","i","transformToSegments","catch","_handleQueryError","bind","newOperator","Object","keys","forEach","key","push","col","index","splice","onChangeInternal","colSegments","angular","isArray","split","length","match","newPlusButton","panelCtrl","refresh","query","join","limit","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class ThrukDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv     = uiSegmentSrv;\n    this.target.table     = this.target.table     || '/';\n    this.target.columns   = this.target.columns   || ['*'];\n    this.target.condition = this.target.condition || '';\n    this.target.type      = this.target.type      || 'table';\n\n    this.setColSegments();\n  }\n\n  getTypes() {\n    var This = this;\n    var data = [\n      This.uiSegmentSrv.newSegment({text: 'table', value: 'table'}),\n      This.uiSegmentSrv.newSegment({text: 'timeseries', value: 'timeseries'})\n    ];\n    return This.datasource.q.when(data);\n  }\n\n  getTables() {\n    var requestOptions = this.datasource._requestOptions({\n      url: this.datasource.url + '/r/v1/index?columns=url&protocol=get',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.datasource.backendSrv.datasourceRequest(requestOptions)\n      .then(result => _.map(result.data, (d, i) => {\n        return { text: d.url, value: d.url };\n      }))\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.datasource._handleQueryError.bind(this));\n  }\n\n  getColumns() {\n    var This = this;\n    var requestOptions = this.datasource._requestOptions({\n      url: this.datasource.url + '/r/v1/'+this.target.table+'?limit=1',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return this.datasource.backendSrv.datasourceRequest(requestOptions)\n      .then(function(result) {\n        var data = [\n          This.uiSegmentSrv.newOperator('-- remove --'),\n          This.uiSegmentSrv.newOperator('avg()'),\n          This.uiSegmentSrv.newOperator('min()'),\n          This.uiSegmentSrv.newOperator('max()'),\n          This.uiSegmentSrv.newOperator('sum()'),\n          This.uiSegmentSrv.newOperator('count()'),\n        ];\n        if(result.data[0]) {\n          Object.keys(result.data[0]).forEach(function(key) {\n            data.push(This.uiSegmentSrv.newSegment({ text: key, value: key }));\n          });\n        }\n        return(data);\n      })\n      .catch(this.datasource._handleQueryError.bind(this));\n  }\n\n  tagSegmentUpdated(col,index) {\n    this.target.columns[index] = col.value;\n    if(col.value == \"-- remove --\") {\n      this.target.columns.splice(index, 1);\n    }\n    this.setColSegments();\n    this.onChangeInternal();\n    return;\n  }\n\n  setColSegments() {\n    this.colSegments = [];\n    if(!angular.isArray(this.target.columns)) {\n      if(!this.target.columns) {\n        this.target.columns = ['*'];\n      } else {\n        this.target.columns = this.target.columns.split(\"\\s*,\\s*\");\n      }\n    }\n    this.target.columns.forEach(col => {\n      this.colSegments.push(this.uiSegmentSrv.newSegment({ value: col }));\n    });\n    if(this.colSegments.length == 0) {\n      this.colSegments.push(this.uiSegmentSrv.newSegment({ value: '*' }));\n    } else {\n      if(this.colSegments[this.colSegments.length-1].text && this.colSegments[this.colSegments.length-1].text.match(/\\(\\)$/)) {\n        this.colSegments.push(this.uiSegmentSrv.newSegment({ value: ' ' }));\n      }\n    }\n    this.colSegments.push(this.uiSegmentSrv.newPlusButton());\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh();\n  }\n\n  getCollapsedText() {\n    var query = 'SELECT '+this.target.columns.join(',')\n               +' FROM '+this.target.table;\n    if(this.target.condition) {\n      query +=  ' WHERE '+this.target.condition\n    }\n    if(this.target.limit) {\n      query +=  ' LIMIT '+this.target.limit\n    }\n    return(query);\n  }\n}\n\nThrukDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}